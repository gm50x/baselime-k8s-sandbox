apiVersion: apps/v1
kind: Deployment
metadata:
  name: marco
  labels:
    fluentd.logger: "true"
  annotations:
    originated: "yes"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marco
  template:
    metadata:
      annotations:
        originated: "no"
      labels:
        app: marco
        fluentd.logger: "true"
    spec:
      containers:
        - name: marco-app
          image: gm50x/marco
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: "staging"
            - name: LOG_LEVEL
              value: "debug"
            - name: LOG_FORMAT
              value: "json"
            - name: SERVICE_NAME
              value: "marco"
            - name: INSPECT_HTTP_TRAFFIC
              value: "all"
            - name: ROUTE_PREFIX
              value: "marco"
            - name: AMQP_URL
              value: "amqps://nxxmdywn:DkttMGi8x3iCgucD81esA3XXpoNB5W7L@porpoise.rmq.cloudamqp.com/nxxmdywn"
            - name: BASE_URL_MARCO_SERVICE
              value: "http://marco-service:3000/marco"
            - name: BASE_URL_POLO_SERVICE
              value: "http://polo-service:3000/polo"
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: marco-service
spec:
  type: ClusterIP
  selector:
    app: marco
  ports:
    - name: marco-http
      protocol: TCP
      port: 3000
      targetPort: 3000
---

