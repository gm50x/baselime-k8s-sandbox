apiVersion: apps/v1
kind: Deployment
metadata:
  name: marco
  labels:
    fluentd.logger: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: marco
  template:
    metadata:
      labels:
        app: marco
        fluentd.logger: "true"
    spec:
      containers:
        - name: marco-app
          image: gm50x/marco
          imagePullPolicy: Always
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: "staging"
            - name: LOG_LEVEL
              value: "debug"
            - name: LOG_FORMAT
              value: "json"
            - name: SERVICE_NAME
              value: "marco"
            - name: ROUTE_PREFIX
              value: "api/marco"
            - name: AMQP_URL
              value: "amqp://gedai:gedai@rabbitmq-loadbalancer-srv:5672"
            - name: MARCO_URL
              value: "http://marco-service:3000/api/marco"
            - name: POLO_URL
              value: "http://polo-service:3000/api/polo"
            - name: ENABLE_OTEL
              value: "true"
            - name: BASE_URL_OTEL_COLLECTOR
              value: "http://otel-collector-opentelemetry-collector.default:4317"
            # - name: BASE_URL_OTEL_COLLECTOR
            #   value: "https://otel-ingest.baselime.io:4317"
            # - name: API_KEY_OTEL_COLLECTOR
            #   value: "4b1d6e21b072d0f1c4589afab2df974cbdb3ba6f"
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: marco-service
spec:
  type: ClusterIP
  selector:
    app: marco
  ports:
    - name: marco-http
      protocol: TCP
      port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: polo
  labels:
    fluentd.logger: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: polo
  template:
    metadata:
      labels:
        app: polo
        fluentd.logger: "true"
    spec:
      containers:
        - name: polo-app
          image: gm50x/polo
          imagePullPolicy: Always
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: "staging"
            - name: LOG_LEVEL
              value: "debug"
            - name: LOG_FORMAT
              value: "json"
            - name: SERVICE_NAME
              value: "polo"
            - name: ROUTE_PREFIX
              value: "api/polo"
            - name: AMQP_URL
              value: "amqp://gedai:gedai@rabbitmq-loadbalancer-srv:5672"
            - name: MARCO_URL
              value: "http://marco-service:3000/api/marco"
            - name: POLO_URL
              value: "http://polo-service:3000/api/polo"
            - name: ENABLE_OTEL
              value: "true"
            - name: BASE_URL_OTEL_COLLECTOR
              value: "http://otel-collector-opentelemetry-collector.default:4317"
            # - name: BASE_URL_OTEL_COLLECTOR
            #   value: "https://otel-ingest.baselime.io:4317"
            # - name: API_KEY_OTEL_COLLECTOR
            #   value: "4b1d6e21b072d0f1c4589afab2df974cbdb3ba6f"
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: polo-service
spec:
  type: ClusterIP
  selector:
    app: polo
  ports:
    - name: polo-http
      protocol: TCP
      port: 3000
      targetPort: 3000
---

